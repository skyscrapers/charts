## Prometheus MatchLabel selectors
prometheus:
  labels:
    prometheus: "k8s-monitor"

## Interval for how often Prometheus scrapes the elasticsearch-exporter
esExporterScrapeInterval: "60s"
esExporterScrapeTimeout: "30s"

## Whether we're monitoring an Amazon Elasticsearch Service domain.
## Enabling this will get disk statistics from Cloudwatch instead of
## Elasticsearch directly, due to Amazon reserving part of the volume for
## internal operations.
## https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/es-metricscollected.html
amazonService:
  enabled: false
  ## Interval for how often Prometheus scrapes the prometheus-cloudwatch-exporter
  ## Note: setting this too low can have an impact on your AWS bill, since the
  ## exporter makes API calls to Amazon Cloudwatch every time Prometheus scrapes
  ## https://aws.amazon.com/cloudwatch/pricing/
  interval: "300s"

## The following settings come from the elasticsearch-exporter chart
elasticsearch-exporter:
  ## number of exporter instances
  ##
  replicaCount: 1

  ## restart policy for all containers
  ##
  restartPolicy: Always

  image:
    repository: justwatch/elasticsearch_exporter
    tag: 1.0.2
    pullPolicy: IfNotPresent

  resources: {}
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    # limits:
    #   cpu: 100m
    #   memory: 128Mi

  service:
    type: ClusterIP
    httpPort: 9108

  es:
    ## Address (host and port) of the Elasticsearch node we should connect to.
    ## This could be a local node (localhost:9200, for instance), or the address
    ## of a remote Elasticsearch server. When basic auth is needed,
    ## specify as: <proto>://<user>:<password>@<host>:<port>. e.g., http://admin:pass@localhost:9200.
    ##
    uri: http://admin:pass@localhost:9200

    ## If true, query stats for all nodes in the cluster, rather than just the
    ## node we connect to.
    ##
    all: true

    ## If true, query stats for all indices in the cluster.
    ##
    indices: true

    ## Timeout for trying to get stats from Elasticsearch. (ex: 20s)
    ##
    timeout: 20s

    ssl:
      ## If true, a secure connection to ES cluster is used (requires SSL certs below)
      ##
      enabled: false

      ca:

        ## PEM that contains trusted CAs used for setting up secure Elasticsearch connection
        ##
        # pem:

      client:

        ## PEM that contains the client cert to connect to Elasticsearch.
        ##
        # pem:

        ## Private key for client auth when connecting to Elasticsearch
        ##
        # key:

  web:
    ## Path under which to expose metrics.
    ##
    path: /metrics


## The following settings come from the prometheus-cloudwatch-exporter chart
prometheus-cloudwatch-exporter:
  # Default values for prometheus-cloudwatch-exporter.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  image:
    repository: prom/cloudwatch-exporter
    tag: latest
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80
    targetPort: 9100
    annotations: {}

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #    memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  aws:
    region: eu-west-1
    role:
    # Note: Do not specify the aws_access_key_id abd aws_secret_access_key if you specified role before
    aws_access_key_id:
    aws_secret_access_key:

  serviceAccount:
    # Specifies whether a ServiceAccount should be created
    create: true
    # The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template
    name:

  rbac:
    # Specifies whether RBAC resources should be created
    create: true

  config: |-
    # Only get statistics for AWS/ES FreeStorageSpace
    region: eu-west-1
    period_seconds: 60
    set_timestamp: false
    metrics:
    - aws_namespace: AWS/ES
      aws_metric_name: FreeStorageSpace
      aws_dimensions: [ClientId, DomainName]
      aws_statistics: [Minimum, Maximum, Average, Sum]

  nodeSelector: {}

  tolerations: []

  affinity: {}
