# Prometheus MatchLabel selectors
prometheusSelectorLabels:
  prometheus: cluster-monitoring

scrapeInterval: "60s"

# SLA of the AmazonMQ broker to monitor.
# If the value is set to "production" the produced alerts will be "critical".
# If set to another value the alerts will be "warning"
sla: production

## The following settings come from the prometheus-cloudwatch-exporter chart
prometheus-cloudwatch-exporter:
  # Default values for prometheus-cloudwatch-exporter.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  image:
    tag: cloudwatch_exporter-0.11.0

  service:
    type: ClusterIP
    port: 80
    targetPort: 9100
    annotations: {}

  serviceMonitor:
    enabled: false

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    # limits:
    #   memory: 128Mi

  aws:
    region: eu-west-1

  serviceAccount:
    create: true
    ## IRSA
    # annotations:
    #   eks.amazonaws.com/role-arn: <arn>

  securityContext:
    runAsUser: 65534
    fsGroup: 65534

  rbac:
    create: true

  config: |-
    region: eu-west-1
    period_seconds: 60
    set_timestamp: false
    metrics:
    - aws_namespace: AWS/AmazonMQ
      aws_metric_name: RabbitMQMemLimit
      aws_dimensions: [Node, Broker]
      aws_statistics: [Average]
    - aws_namespace: AWS/AmazonMQ
      aws_metric_name: RabbitMQMemUsed
      aws_dimensions: [Node, Broker]
      aws_statistics: [Maximum]
    - aws_namespace: AWS/AmazonMQ
      aws_metric_name: RabbitMQDiskFreeLimit
      aws_dimensions: [Node, Broker]
      aws_statistics: [Average]
    - aws_namespace: AWS/AmazonMQ
      aws_metric_name: RabbitMQDiskFree
      aws_dimensions: [Node, Broker]
      aws_statistics: [Minimum]

  nodeSelector: {}

  tolerations: []

  affinity: {}
