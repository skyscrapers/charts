Dex:
  Image: "quay.io/coreos/dex"
  ImageTag: "v2.6.1"
  ImagePullPolicy: "Always"

  # # Should be accessible from user browser.
  # NodePort: 30443
  # Issuer: "https://kubesignin.example.com/dex"

  # # Must set your own CA which compatible with the Issuer URI.
  # # Use base64 encoded value.
  # Tls:
    # Ca: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJRENDQWdpZ0F3SUJBZ0lVU3dZdkZORUc0cU1uVW0zWFNYcUFxNGk1NFBBd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dqRVlNQllHQTFVRUF4TVBkbUZuY21GdWRDOXdhMmt2WkdWNE1CNFhEVEUyTVRJeE16QTBNVEV6TUZvWApEVEkyTVRJeE1UQTBNVEl3TUZvd0dqRVlNQllHQTFVRUF4TVBkbUZuY21GdWRDOXdhMmt2WkdWNE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXAwNVR3b1BFNXUrQkxnQkxqY1VwWkhrcm5FRGgKc3loMUlQaU1iM3lzd09WSkVHOTE5eTFrVzlxNkVwSUpaYURac0JvRU9ERjNBQ2FyZFNyM0djTGZVOWZUS1J1VQplNThCK0doSS94WHVmVzJzTG9DY2RpbDJIREFMSFZWNW1TNWY3ZkVIazFadC9yKzczWXM2R25FcE9QQVoyUENWCkU5RGtVYStHVlB1SDZCUjdMalFYSnlqaGNEOFJIYW0vNHpNblFPMjZGNzRBZ1ZwYzd2eEpremFPcFhtT0Yram0KYnFtYnZIeWk5ZXN5aWowVk9VOWRoZjhVZE9zUFNBV095bENmRFc3RVBwR1VNVVJSTUlEWHZTSzFHZ2tNMlo2MgppL2ZiaXV6YnYxbDRoQmVaTW83dzN5ZDN6MXllTWhIYkNTRVd0MGVCT0pUTk5UaFhJK2lmRTRjZ0F3SURBUUFCCm8xNHdYREFPQmdOVkhROEJBZjhFQkFNQ0FRWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVUKdVhzL09tWk9LZks2UVNHODc2TUtyYlBOSFpZd0dnWURWUjBSQkJNd0VZSVBkbUZuY21GdWRDOXdhMmt2WkdWNApNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFxSEhKek4xK0hyOUNSanJqNnQvczJOYTBlcXBzUFBvbzFuZ0p0CktaWFlOVXNPYzVSbDdLVXpIQXhJamhyaDIwbUFCcEFLTHBVZzNHQ0hwUjRXVTY5K0dyalBFVUpJbmRneit5MVMKS0VNTTEwZWVaQzlxQVRaVVZxdlU0K0ZZM2lBREhibnpKL1ArNU5jdHI4eVRUWlh2MHVwTHdVVHI2aXpVSkluVwpxUjdhbUtuaWZKYU1KZGxpZGQzQVlmYWFtdjlRSkRQU3Z4TWJiOUFha0tzdE94YU1JZWlndFV1MENsK0VVQmpjCmU0V2pKVHdxd1lMc21QNmVtZVgxSHBid0xMTU1OVWRJT29ocm1QYk1KbE5YMUF4aHZOQ05aT21XSDlEbXgrMWMKQWYyeFVZWFlPeUZnV3ZBTzdPZEY2V3UvU3Y3K0FXTFI3QVJJd0VjMXpWcnRScTE1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0="
    # Cert: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lVYndZSjVDNkFENExqM3VSVTZ3Y0JBUkVKS2Fjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dqRVlNQllHQTFVRUF4TVBkbUZuY21GdWRDOXdhMmt2WkdWNE1CNFhEVEUyTVRJeE16QTBNVEV6TWxvWApEVEUzTURFeE1qQTBNVEl3TWxvd0ZURVRNQkVHQTFVRUF4TUtLaTVzYjJOaGJDNXBiekNDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWg2VnIyNlFpYUw3U3phMURLVnE3SnA2bjBjcEthMjZSYXEKcDB1OVN5ZHl3dXpVNEc3QWMrYTdueEFVREQwK0J6ZktSTkxCeU43c0RkOUp3b3BDMkphRkJyd3N6ZVFrTFFoNQpCZmlaaHZVT1phMFYxa2IyM2lXNWVGOWszOVpYZHpMWnR6UDNRREdWVGFYb0ZxV0VDdGc2UmR2RUVGOHJFZDlZCjQ1T0JLRTJwMVdkS25UR05PcHljU3FFckhnQlJOTjVqSEJUWDlNdlhORjBPY3UxeWF0N2dGeDlnRUVDcFAxYS8KazJFSko4VUZKT1JSZ0VNR05tUlNwNnJ1aklCRnplN084SCt2Y2plMVp5Z0NFTklScmsvcjU2NWZOUGcwMEFJaQpCQytOSGJiUnhGUnY4dkRDeWd2N2k5eG5rL3cwSXFDTEk4bUhWT3BQVHZ1S0dPWlJQMjhDQXdFQUFhT0JsRENCCmtUQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUIwR0ExVWREZ1FXQkJRbWd1NTRhUmJZYW83TU5IUkllUmNsZGlLd1VEQWZCZ05WSFNNRUdEQVdnQlM1ZXo4NgpaazRwOHJwQklienZvd3F0czgwZGxqQWdCZ05WSFJFRUdUQVhnZ29xTG14dlkyRnNMbWx2Z2dsc2IyTmhiR2h2CmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSVduN2ZLZEhOTzQvTVlTamZwU2xIYUYyMzRzbTNhUnpIQ1YKZFdiaDh2enlBdm91aHUzaUNldXJ4d0gyOUZLTXBxaUJGZlFsclZESG5hTGpjM3UzV2hScFJITTBMaHBaNFBFQQpXZVRGZUtKSkFkcmF2a2crV2V4R2UzNGxncFdUMnJXV3RuVzVrRCtVZnJuVUJWL2I0YlZVeUJSWnd6ZGNJUzhMCmY2VWp0N2lRU1JHZVE1NXZyOFpnMkdQajVjRFh3d2VKUE5sZFhNQWZzTU5yL3JxU0dSVFZRWm51VjJHcDdTTlYKenRyeGRlbU9oeDhRc1BUWnZpWXdqUld1T09ua29Scmc1cSsrYjZvODZCc1UvOUU2aDNieEVmeXNFN29VSkN0RApXeHl0SGF2L3I0bVI0VmxmQzdRazdtNlVFUHhoZTlLUTIvNk5xdHpLZEVvVFVRclFERHM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0="
    # Key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeUhwV3ZicENKb3Z0TE5yVU1wV3JzbW5xZlJ5a3ByYnBGcXFuUzcxTEozTEM3TlRnCmJzQno1cnVmRUJRTVBUNEhOOHBFMHNISTN1d04zMG5DaWtMWWxvVUd2Q3pONUNRdENIa0YrSm1HOVE1bHJSWFcKUnZiZUpibDRYMlRmMWxkM010bTNNL2RBTVpWTnBlZ1dwWVFLMkRwRjI4UVFYeXNSMzFqams0RW9UYW5WWjBxZApNWTA2bkp4S29Tc2VBRkUwM21NY0ZOZjB5OWMwWFE1eTdYSnEzdUFYSDJBUVFLay9WcitUWVFrbnhRVWs1RkdBClF3WTJaRktucXU2TWdFWE43czd3ZjY5eU43Vm5LQUlRMGhHdVQrdm5ybDgwK0RUUUFpSUVMNDBkdHRIRVZHL3kKOE1MS0MvdUwzR2VUL0RRaW9Jc2p5WWRVNms5Tys0b1k1bEUvYndJREFRQUJBb0lCQUYrUGFSOWcxRDFaZjRGZApBYjdtOXdQQlZ1T3lMbzNGTEZBQW9tUUk0L1QyMEJGaDIyVVBXVy9IU1NlNTFxZXVsSFEwZHgvYS9TdTlhMU5lCjdsdEhSOFJmdm5rZUJqcFVRQjhFeVNMWjA2bWw1ak5kOEZpOVBlRFBpcUEyRGpnMlV2d3JLUmVkS0wwNXhOeHIKUjdnM3U0K2NIMGFGSzZTaGZCQnhaM0VkSkovM2xxcG5za2RVMjBRSXZhUlR6STNOaW01aE1yOEhpUnUyMllYbwoxUEk2b3ZBMmt2RXFtaGx3STgzTDN6dUZRUGRuSTRlcnJ1N3E2OFJjMHJOWERFb3ZxNTFraFVyc3pEeE1JdG1SCnQ1UStmVGVSbVhzV2FJSnUwSm5FazlOcFF0WGRKekxpSUIzenVhU01hRUpYS2lveVFYRXo0VFdlMUdXNHFqeXEKUEI1bVQva0NnWUVBMEpQVVo2VlhWZ1RTRzJnT3NKRE9qREFIR2NDT3RjaWw5WjVZVVRxVXo5TEx5TmtKRWpiSQpIa1FycUhsOXkrdmt1MkRpdlA2dEY5QndueFpaQnRpZGVNOUt5b2VZQlI4Szg3QzFBdEIrb3BsVnpmWGNWdlVhCjFKczUvSU5FWHBlQ1E5Wmcya2o4T1hTZHdydTE5V25DMytuWEpSNjBacndraUlTVktvVlZVU1VDZ1lFQTlnOFQKbWt1ZUNXNEphem00MkI2dTkzdlhTcnFyc3NlUkZSTnhrd3pDUGRiOUdMa3JsdzJiS3QvSjMxckxFZXpHN3NuVApNYjdZc1JtUng4NkVDWWlFYnE2MFRkVmt4S1pUNTFYK0NkWFVYUWZVK0tIaTB3Nk9Kd2JhU0VQaGNKa1A0bS80CkpIYXNWaGdNMnNQaUh1enhleER2TVBhZ1ZjUnh3bnF3bEZRSVhBTUNnWUJLcDI3Ui9pTUpYY1phR3QrUElQVmMKeGQvMHZyQVZycENBSGtIY0tReVVhZzJZZ040M1Q3Wkc1djE5V3FiRTgxUzJJSkpuTlB4OVZwVEl6RFhuTm1iKwprNnRnWERIME8wMHZOZU5EODU0djBwUWNtTkJacTNjRCs5OUFXemVBWjlndk1hOE8waXE4NGRtSmxxZ2xBOHJGClhDd3VWQlFiNVdGcUg1SklXdHJUcFFLQmdFOThrVldQeGU2LzZEVUdRWXMzWmtnMmJsY0t0SHFkYzJXK2tUcnkKclREeTZYSDZKM1cxaElHMkoyMkswL3puWTJBeVBKSmVWM3ZtaWF4bEwwd3hHSzcwcXZSVjBpYWdvSXdqd0Z3SApBb0pIREdxQlNWZnE1TXNBc0xVVmtKY2lLdnA0TjAzNE5EWGZzUTllcGdaZGZxakYwSzhkakxBSU5NT2hoTGQxCjZmbG5Bb0dCQUs1dTIxYzdqS2ppekRlUGp6ODRGRWRSanphZ2VaTnFjbjZhTnk5RVBZQ29Tb05DRkFSWDZMa3MKMi9FRTdIdWNmVytaVVYxc0orS0gvZFlYK2dhd2RIeFhnRkVkclFBQnpMQUZ4K1FpVTZ3VXpCTWt4ZENZSWMxRQo1Ym15eEd6NUJhL3dvZHphb1RqenRaVXdSZkpCMi9qZkt3WGF2bDgvMzdmVFBjVUFtM2tKCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t"

  # # Use this values to set the duration of time for which:
  # # - the SigningKeys will be rotated.
  # # - the IdTokens will be valid. This value shouldn't be longer than SigningKeys.
  Expiry:
    SigningKeys: "6h"
    IdTokens: "1h"

  # # Must set your own credentials.
  # # Use base64 encoded value.
  Connectors:
    GitHub:
    - Name: "GitHub"
      ClientId: "base64clientID"
      ClientSecret: "base64clientSecret=="
      Orgs:
      - name: myorg
        teams:
          - myteam
      - name: otherorg
        teams:
          - someteam

  RedirectUris: []

  # StaticPassword:
  #   Email: "admin@example.com"
  #   Hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
  #   Username: "admin"
  #   UserID: "08a8684b-db88-4b73-90a9-3cd1661f5466"

  Memory: 28Mi
  Cpu: 2m
  Replicas: 1

  LogLevel: info

Kubesignin:
  Image: "skyscrapers/kubesignin"
  ImageTag: "latest"
  ImagePullPolicy: "Always"

  ClientSecret: MzU4UDk0OFc2MkV2OFFiUGg1Q3Q=

  # # Should be accessible from user browser
  # NodePort: 30080
  # RedirectUri: https://kubesignin.example.com/callback

  # # This is going to be used for both kubesignin and dex
  # DomainName: kubesignin.example.com

  Memory: 16Mi
  Cpu: 2m
  Replicas: 1

  # Tokens that have these groups as claims will be given admin access to the cluster
  K8sAdminsGroups: []
    # - "myorg:myteam"
    # - "otherorg:someteam"

  # Debug: true

proxy:
  image:
    repository: "quay.io/gambol99/keycloak-proxy"
    tag: "v2.2.2"
    pullPolicy: "IfNotPresent"
  service:
    internalPort: 3000
    externalPort: 3000
  resources:
    requests:
      cpu: 1m
      memory: 16Mi
    limits:
      memory: 16Mi

# Keycloack proxies to setup
proxies: {}
  # dashboard:
  #   replicaCount: 2
  #   # Upstream service to proxy to
  #   upstreamURL: "https://k8s-dashboard-kubernetes-dashboard.kube-system.svc.cluster.local"
  #   upstreamTimeout: "60s"
  #   oidc:
  #     # Ingress URL
  #     redirectURL: "kubernetes-dashboard.example.com"
  #     # Comma separated list of groups for matching the OIDC claim
  #     groups: skyscrapers:k8s-admins
  #   # Extra arguments to pass to the keycloack-proxy container
  #   extraArgs: []
