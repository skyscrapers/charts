{{ if .Values.enableCalico }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: "{{ .Release.Name }}-calico"
  namespace: "{{ .Release.Namespace }}"
  labels:
{{ include "labels" $ | indent 4 }}
    prometheus: "{{ .Release.Name }}"
    component: calico
spec:
  groups:
  - name: calico.rules
    rules:
    - alert: CalicoNodeInstanceDown
      expr: up{job="{{ .Release.Name }}-calico"} != 1
      for: 5m
      labels:
        severity: critical
      annotations:
        description: '{{`{{$labels.instance}}`}} of job {{`{{$labels.job}}`}} has been down for more than 5 minutes'
        summary: 'Instance {{`{{$labels.instance}}`}} Pod: {{`{{$labels.pod}}`}} is down'
        runbook_url: 'https://github.com/skyscrapers/documentation/tree/master/runbook.md#alert-name-caliconodeinstancedown'
    - alert: CalicoDataplaneFailures
      expr: felix_int_dataplane_failures{job="{{ .Release.Name }}-calico"} > 0
      for: 5m
      labels:
        severity: warning
      annotations:
        description: '{{`{{$labels.instance}}`}} with calico-node pod {{`{{$labels.pod}}`}} has been having dataplane failures'
        summary: 'Instance {{`{{$labels.instance}}`}} - Dataplane failures'
        runbook_url: 'https://github.com/skyscrapers/documentation/tree/master/runbook.md#alert-name-calicodataplanefailures'
{{ end }}
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: "{{ .Release.Name }}-node-custom"
  namespace: "{{ .Release.Namespace }}"
  labels:
{{ include "labels" $ | indent 4 }}
    prometheus: "{{ .Release.Name }}"
spec:
  groups:
  - name: node-custom.rules
    rules:
    - alert: NodeWithImpairedVolumes
      expr: count by(node)(kube_node_spec_taint{key="NodeWithImpairedVolumes", effect="NoSchedule"}) > 0
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: 'Node {{`{{$labels.node}}`}} has Impaired Volumes'
        description: 'EBS volumes are failing to attach to node {{`{{$labels.node}}`}}'
        runbook_url: 'https://github.com/skyscrapers/documentation/tree/master/runbook.md#alert-name-nodewithimpairedvolumes'
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: "{{ .Release.Name }}-certificate-status"
  namespace: "{{ .Release.Namespace }}"
  labels:
{{ include "labels" $ | indent 4 }}
    prometheus: "{{ .Release.Name }}"
    group: certificate-status
spec:
  groups:
  - name: certmanager-certificate-status.rules
    rules:
    - alert: CertificateNotReady
      expr: certmanager_certificate_ready_status{condition="True"} != 1
      for: 10m
      labels:
        severity: warning
        group: certificate-status
      annotations:
        message: 'A cert-manager certificate can not be issued/updated'
        runbook_url: 'https://github.com/skyscrapers/documentation/tree/master/runbook.md#alert-name-certificate-not-ready'
