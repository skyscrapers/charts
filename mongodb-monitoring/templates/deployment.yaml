apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "mongodb-exporter.fullname" . }}
  labels:
{{ include "labels" $ | indent 4 }}
spec:
  replicas: {{ .Values.mongodbExporter.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mongodb-exporter
        release: {{ .Release.Name }}
    spec:
      restartPolicy: {{ .Values.mongodbExporter.restartPolicy }}
      containers:
        - name: mongodb-exporter
          image: "{{ .Values.mongodbExporter.image.repository }}:{{ .Values.mongodbExporter.image.tag }}"
          imagePullPolicy: {{ .Values.mongodbExporter.image.pullPolicy | quote }}
          command: 
            - "/usr/local/bin/mongodb_exporter"
            - "-web.listen-address=:{{ .Values.mongodbExporter.service.httpPort }}"
            - "-web.metrics-path=/metrics"
            - "-logtostderr"
            - "-mongodb.uri=mongodb://{{ .Values.mongodbExporter.mongodb.dbuser }}:{{ .Values.mongodbExporter.mongodb.dbpass }}@{{ .Values.mongodbExporter.mongodb.replicasetmembers }}"
            - "-mongodb.collect.oplog={{ .Values.mongodbExporter.mongodb.collectOplog }}"
            - "-mongodb.collect.replset={{ .Values.mongodbExporter.mongodb.collectReplSet }}"
            - "-mongodb.collect.top={{ .Values.mongodbExporter.mongodb.collectTopMetrics }}"
            - "-mongodb.collect.database={{ .Values.mongodbExporter.mongodb.collectDatabaseMetrics }}"
            - "-mongodb.collect.collection={{ .Values.mongodbExporter.mongodb.collectCollectionMetrics }}"
            - "-mongodb.collect.profile={{ .Values.mongodbExporter.mongodb.collectProfileMetrics }}"
            - "-mongodb.collect.connpoolstats={{ .Values.mongodbExporter.mongodb.collectConnPoolStats }}"
          resources:
{{ toYaml .Values.mongodbExporter.resources | indent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.mongodbExporter.service.httpPort }}
          livenessProbe:
              httpGet:
                port: http
                path: /metrics
              initialDelaySeconds: 30
              periodSeconds: 60
              timeoutSeconds: 5
          readinessProbe:
              httpGet:
                port: http
                path: /metrics
